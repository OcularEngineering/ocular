version: "3"
services:
  ocular-models-server:
    container_name: ocular-models-server
    build:
      context: .
      dockerfile: packages/ocular-models-server/Dockerfile.models
    ports:
      - 8000:8000

  qdrant:
    image: qdrant/qdrant:latest
    restart: always
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
      - 6335
    configs:
      - source: qdrant_config
        target: /qdrant/config/production.yaml
    volumes:
      - ./qdrant_data:/qdrant_data

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "bitnami/kafka:latest"
    user: root
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ./Kafka:/bitnami/kafka
    depends_on:
      - zookeeper

  ocular-db:
    image: postgres:14-alpine
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: ocular
      POSTGRES_USER: ocular
      POSTGRES_DB: ocular

  ocular-db-migration:
    container_name: ocular-db-migration
    depends_on:
      - ocular-db
    build:
      context: .
      dockerfile: packages/ocular/Dockerfile.dev
    environment:
      - DATABASE_URL=postgresql://ocular:ocular@ocular-db:5432/ocular
      - DATABASE_NAME=ocular
    command: npm run typeorm migration:run

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    depends_on:
      - ocular-db
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ocularpostgres@useocular.com
      PGADMIN_DEFAULT_PASSWORD: ocular
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  pgadmin-data:

configs:
  qdrant_config:
    content: |
      log_level: INFO
