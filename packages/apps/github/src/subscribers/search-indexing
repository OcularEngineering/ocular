import { IEventBusService, ISearchService } from "../types"
import { defaultSearchIndexingProductRelations, indexTypes } from "../utils/search"
import OrganisationService from "../services/organisation"
import { UserService } from "../services"
import { User } from "../models"

type InjectedDependencies = {
  eventBusService: IEventBusService
  searchService: ISearchService
  vectorSearchService: ISearchService
  organisationService: OrganisationService
  userService: UserService
}

class SearchIndexingSubscriber {
  private readonly eventBusService_: IEventBusService
  private readonly searchService_: ISearchService
  private readonly organisationService_: OrganisationService
  private readonly userService_: UserService
  private readonly vectorSearchService_: ISearchService

  constructor({
    eventBusService,
    searchService,
    organisationService,
    userService,
    vectorSearchService,
  }: InjectedDependencies) {
    this.eventBusService_ = eventBusService
    this.searchService_ = searchService
    this.vectorSearchService_ = vectorSearchService
    this.organisationService_ = organisationService
    this.userService_ = userService

    // this.eventBusService_.subscribe(INDEX_CORE_EVENT, this.indexOrganisationUsers)
  }

  indexOrganisationUsers = async (): Promise<void> => {
 
  }
}

export default SearchIndexingSubscriber